%%% Function made to retrieve data stored in the X structure generated by
%%% rdmseed.

% Input:
%     X: X structurce generated by rdmseed
%     
% Output:
%     DATA: structure that has the form:
%         DATA.NAME
%         DATA.RSAMPLE
%         DATA.TIMESTART
%         DATA.CHAN
%         DATA.COMP
%         DATA.TRACE
%         DATA.FILTER
        

function S=get_DATA(varargin)

    %%% Parameters
    
    value_gap=0;

    %%%% Parse argument
    p = inputParser;
    defaultParam = '';
    defaultStruct=false;
    addOptional(p,'X',defaultStruct, @(x) isstruct(x) || islogical(x));
    addOptional(p,'Param',defaultParam,@(x) isstruct(x) || ischar(x));

    parse(p,varargin{:});
    X = p.Results.X;
    PickerParam= p.Results.Param;
    
    %%% Initialize Structure
   
    %%% Get station
    
    station_seed(:,1)={X.StationIdentifierCode};
    
    %%% Check if station name is wrong (contains a null character)
    
    ind=[];
    for i=1:length(station_seed)
        if unicode2native(station_seed{i}(1))==unicode2native(char(0));
            ind=[ind;i];
        end
    end
    
    station_seed(ind)=[];
    station_all=strtrim(station_seed);     % WCC trim white space(s)
    station_seed=unique(station_all);      % Stations available n by 1 Cell
    
    %%% Channels full name (X and channel_seed have the same size)
    
    channel_seed(:,1)={X.ChannelFullName};
    channel_seed=regexprep(channel_seed,'(\w*):(\w*):(\w*):(\w*)','$2:$4'); %WCC for new full name (NN:SSSS:LL:CC)

    %%% Get number of stations available

    len_sta=size(station_seed,1);

    %%% Allocating and defining the structure that contains all the info,
    %%% it's like X from rdmseed but stored in properly
    
    EVENTS=read_EVENTS();
    DATA=initialize_DATA(len_sta);

    for i=1:length(station_seed)
        
        DATA(i).STAT=station_seed{i};
        ind_sta=find(strcmp(station_all,station_seed{i}));
        
        DATA(i).RSAMPLE=X(ind_sta(1)).SampleRate;
        
        chan_sta=unique(channel_seed(ind_sta));
        comp_sta=cellfun(@(x) x(regexpi(x,':')+1:regexpi(x,':')+3), chan_sta,'UniformOutput',0);
        
        for j=1:length(comp_sta)
            ind_comp=find(~cellfun(@isempty,regexp(channel_seed,[station_seed{i},':',comp_sta{j}])));
            trace_gap=cat(1,X(ind_comp).d);
            time_gap=cat(1,X(ind_comp).t);
            new_time=(time_gap-time_gap(1))*86400;
            [~,trace_no_gap]=fill_gaps(new_time,trace_gap,DATA(i).RSAMPLE,value_gap);
            DATA(i).RAW(j).TRACE=trace_no_gap;
            DATA(i).RAW(j).TIMESTART=X(ind_comp(1)).RecordStartTimeMATLAB;
        end
        
        chan_type=cellfun(@(x) x(1:2),comp_sta,'UniformOutput',0);
        comp_type=cellfun(@(x) x(3),comp_sta,'UniformOutput',0);
        
        %%% Replace 2|E by X , 1|N by Y ...
        
%         comp_type=regexprep(comp_type,'2|E','X');
%         comp_type=regexprep(comp_type,'1|N','Y');
%         comp_type=regexprep(comp_type,'3','Z');
%         
        for j=1:length(comp_sta)
            DATA(i).RAW(j).CHAN=chan_type{j};
            DATA(i).RAW(j).COMP=comp_type{j};
        end
        
        %%% Put user param if it's define in PickerParam structure
        
        if strcmp(PickerParam,'')
            DATA(i).USER_PARAM=[];
            continue
        end
        if any(strcmp(DATA(i).STAT,fieldnames(PickerParam.Station_param)))
            DATA(i).USER_PARAM=PickerParam.Station_param.(DATA(i).STAT);
        end
            
    end
    
    %%% Uniformize DATA (same timestart and same length for traces) VERY
    %%% IMPORTANT

    DATA=uniform_DATA(DATA);

    %%% Define structure
    
    S.EVENTS=EVENTS;
    S.DATA=DATA;

end

function DATA=initialize_DATA(size_DATA)

 
    DATA(size_DATA).STAT=[];
    DATA(size_DATA).RSAMPLE=[];

    RAW.CHAN=[];
    RAW.COMP=[];
    RAW.TIMESTART=[];
    RAW.TRACE=[];
    RAW.FILTER=[];
    RAW.NOISE=[]; % Noise level
    RAW.SNR=[];
    RAW_FLAG_P=[];
    RAW_FLAG_S=[];
    RAW.POLES=[];
    RAW.ZEROS=[];
    RAW.GAIN=[];
    RAW.DISP=[];
    
    %%% Get picks structure from read_EVENTS
    
    EVENTS=read_EVENTS();
    
    for i=1:size_DATA
        DATA(i).EVENTS=EVENTS;
        DATA(i).RAW=RAW;
    end

end





